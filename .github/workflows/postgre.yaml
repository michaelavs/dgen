name: CI

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          pip install pipenv
        if: steps.cache.outputs.cache-hit != 'true'

      # - name: Test with black
      #   run: |
      #     python -m black --check .
      ##################################
      # - name: Install pipenv
      #   uses: dschep/install-pipenv-action@v1

      # - name: Cache Pipenv virtualenv
      #   uses: actions/cache@v1
      #   id: pipenv-cache
      #   with:
      #     path: ~/.pipenv
      #     key: ${{ runner.os }}-pipenv-v2-${{ hashFiles('**/Pipfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pipenv-v2-

      # - name: Install Dependencies
      #   env:
      #     PIPENV_NOSPIN: 'true'
      #     WORKON_HOME: ~/.pipenv/virtualenvs
      #     PIPENV_CACHE_DIR: ~/.pipenv/pipcache
      #   run: pipenv install --dev
      #   if: steps.pipenv-cache.outputs.cache-hit != 'true'

      - name: Test with pytest
        # env:
        #   DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.pipenv/virtualenvs
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/test_db'
          DJANGO_SECRET_KEY: 'KEY'
          DJANGO_SETTINGS_MODULE: CONFIG'
          PYTHONPATH: '.'
          DJANGO_DEBUG: 'False'
        run: |
          pipenv run python -m pytest test
          # pipenv run pytest 
        # run: |
        #   python -m pytest test